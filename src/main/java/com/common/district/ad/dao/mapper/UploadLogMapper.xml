<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.common.district.ad.dao.UploadLogMapper" >
  <resultMap id="BaseResultMap" type="com.common.district.ad.model.UploadLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="file_name" property="fileName" jdbcType="VARCHAR" />
    <result column="old_file_name" property="oldFileName" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="sheet_name" property="sheetName" jdbcType="VARCHAR" />
    <result column="create_user_id" property="createUserId" jdbcType="VARCHAR" />
    <result column="create_user_name" property="createUserName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user_id" property="updateUserId" jdbcType="VARCHAR" />
    <result column="update_user_name" property="updateUserName" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="organ_id" property="organId" jdbcType="VARCHAR" />
    <result column="file_no" property="fileNo" jdbcType="VARCHAR" />
    <result column="file_url" property="fileUrl" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.common.district.ad.model.UploadLog" extends="BaseResultMap" >
    <result column="error_msg" property="errorMsg" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, file_name, old_file_name, type, status, sheet_name, create_user_id, create_user_name, 
    create_time, update_user_id, update_user_name, update_time, organ_id, file_no, file_url
  </sql>
  <sql id="Blob_Column_List" >
    error_msg
  </sql>

  <sql id="BaseWhereExt">
    <if test="search.createUserName != null and search.createUserName !=''">
      and create_user_name like
      concat('%',#{search.createUserName,jdbcType=VARCHAR},'%')
    </if>
    <if test="search.type != null ">
      and type =#{search.type,jdbcType=INTEGER}
    </if>
    <if test="search.createTimeStart != null">
      and create_time >= #{search.createTimeStart}
    </if>
    <if test="search.createTimeEnd != null">
      and create_time &lt;= #{search.createTimeEnd}
    </if>
    <if test="search.organId != null and search.organId !='' ">
      and organ_id =#{search.organId,jdbcType=VARCHAR}
    </if>
  </sql>

  <resultMap id="VOResultMap" type="com.common.district.res.vo.UploadLogVO" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="old_file_name" property="oldFileName" jdbcType="VARCHAR" />
    <result column="create_user_id" property="createUserId" jdbcType="VARCHAR" />
    <result column="create_user_name" property="createUserName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="organ_id" property="organId" jdbcType="VARCHAR" />
    <result column="file_no" property="fileNo" jdbcType="VARCHAR" />
    <result column="file_url" property="fileUrl" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
  </resultMap>

  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from pub_ad_upload_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from pub_ad_upload_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.common.district.ad.model.UploadLog" >
    insert into pub_ad_upload_log (id, file_name, old_file_name, 
      type, status, sheet_name, 
      create_user_id, create_user_name, create_time, 
      update_user_id, update_user_name, update_time, 
      organ_id, file_no, file_url, 
      error_msg)
    values (#{id,jdbcType=INTEGER}, #{fileName,jdbcType=VARCHAR}, #{oldFileName,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{sheetName,jdbcType=VARCHAR}, 
      #{createUserId,jdbcType=VARCHAR}, #{createUserName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUserId,jdbcType=VARCHAR}, #{updateUserName,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{organId,jdbcType=VARCHAR}, #{fileNo,jdbcType=VARCHAR}, #{fileUrl,jdbcType=VARCHAR}, 
      #{errorMsg,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.common.district.ad.model.UploadLog" >
    insert into pub_ad_upload_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="fileName != null" >
        file_name,
      </if>
      <if test="oldFileName != null" >
        old_file_name,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="sheetName != null" >
        sheet_name,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="createUserName != null" >
        create_user_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="updateUserName != null" >
        update_user_name,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="organId != null" >
        organ_id,
      </if>
      <if test="fileNo != null" >
        file_no,
      </if>
      <if test="fileUrl != null" >
        file_url,
      </if>
      <if test="errorMsg != null" >
        error_msg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fileName != null" >
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="oldFileName != null" >
        #{oldFileName,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="sheetName != null" >
        #{sheetName,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createUserName != null" >
        #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateUserName != null" >
        #{updateUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="organId != null" >
        #{organId,jdbcType=VARCHAR},
      </if>
      <if test="fileNo != null" >
        #{fileNo,jdbcType=VARCHAR},
      </if>
      <if test="fileUrl != null" >
        #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="errorMsg != null" >
        #{errorMsg,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.common.district.ad.model.UploadLog" >
    update pub_ad_upload_log
    <set >
      <if test="fileName != null" >
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="oldFileName != null" >
        old_file_name = #{oldFileName,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="sheetName != null" >
        sheet_name = #{sheetName,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createUserName != null" >
        create_user_name = #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateUserName != null" >
        update_user_name = #{updateUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="organId != null" >
        organ_id = #{organId,jdbcType=VARCHAR},
      </if>
      <if test="fileNo != null" >
        file_no = #{fileNo,jdbcType=VARCHAR},
      </if>
      <if test="fileUrl != null" >
        file_url = #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="errorMsg != null" >
        error_msg = #{errorMsg,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.common.district.ad.model.UploadLog" >
    update pub_ad_upload_log
    set file_name = #{fileName,jdbcType=VARCHAR},
      old_file_name = #{oldFileName,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      sheet_name = #{sheetName,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=VARCHAR},
      update_user_name = #{updateUserName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      organ_id = #{organId,jdbcType=VARCHAR},
      file_no = #{fileNo,jdbcType=VARCHAR},
      file_url = #{fileUrl,jdbcType=VARCHAR},
      error_msg = #{errorMsg,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.common.district.ad.model.UploadLog" >
    update pub_ad_upload_log
    set file_name = #{fileName,jdbcType=VARCHAR},
      old_file_name = #{oldFileName,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      sheet_name = #{sheetName,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=VARCHAR},
      update_user_name = #{updateUserName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      organ_id = #{organId,jdbcType=VARCHAR},
      file_no = #{fileNo,jdbcType=VARCHAR},
      file_url = #{fileUrl,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getLogCount" resultType="Integer">
    select
      count(1)
    from pub_ad_upload_log
    where organ_id = #{organId,jdbcType=VARCHAR}
     AND type = #{type,jdbcType=INTEGER}
  </select>

  <select id="selectPageList" resultMap="VOResultMap">
    select id,old_file_name,create_user_id,create_user_name,create_time,organ_id,file_no,file_url,type
    from pub_ad_upload_log
    where 1=1
    <include refid="BaseWhereExt"></include>
    order by id desc
  </select>
</mapper>