<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.common.district.ad.dao.ViolateRecordMapper" >
  <resultMap id="BaseResultMap" type="com.common.district.ad.model.ViolateRecord" >
    <id column="vr_id" property="vrId" jdbcType="BIGINT" />
    <result column="rb_id" property="rbId" jdbcType="BIGINT" />
    <result column="violate_type" property="violateType" jdbcType="INTEGER" />
    <result column="violate_value" property="violateValue" jdbcType="DECIMAL" />
    <result column="compute_type" property="computeType" jdbcType="INTEGER" />
    <result column="violate_amount" property="violateAmount" jdbcType="DECIMAL" />
    <result column="compute_violate_time" property="computeViolateTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="VARCHAR" />
    <result column="create_user_name" property="createUserName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="is_del" property="isDel" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    vr_id, rb_id, violate_type, violate_value, compute_type, violate_amount, compute_violate_time, 
    create_user_id, create_user_name, create_time, is_del
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from pub_ad_violate_record
    where vr_id = #{vrId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from pub_ad_violate_record
    where vr_id = #{vrId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.common.district.ad.model.ViolateRecord" >
    insert into pub_ad_violate_record (vr_id, rb_id, violate_type, 
      violate_value, compute_type, violate_amount, 
      compute_violate_time, create_user_id, create_user_name, 
      create_time, is_del)
    values (#{vrId,jdbcType=BIGINT}, #{rbId,jdbcType=BIGINT}, #{violateType,jdbcType=INTEGER}, 
      #{violateValue,jdbcType=DECIMAL}, #{computeType,jdbcType=INTEGER}, #{violateAmount,jdbcType=DECIMAL}, 
      #{computeViolateTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=VARCHAR}, #{createUserName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{isDel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.common.district.ad.model.ViolateRecord" >
    insert into pub_ad_violate_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="vrId != null" >
        vr_id,
      </if>
      <if test="rbId != null" >
        rb_id,
      </if>
      <if test="violateType != null" >
        violate_type,
      </if>
      <if test="violateValue != null" >
        violate_value,
      </if>
      <if test="computeType != null" >
        compute_type,
      </if>
      <if test="violateAmount != null" >
        violate_amount,
      </if>
      <if test="computeViolateTime != null" >
        compute_violate_time,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="createUserName != null" >
        create_user_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="isDel != null" >
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="vrId != null" >
        #{vrId,jdbcType=BIGINT},
      </if>
      <if test="rbId != null" >
        #{rbId,jdbcType=BIGINT},
      </if>
      <if test="violateType != null" >
        #{violateType,jdbcType=INTEGER},
      </if>
      <if test="violateValue != null" >
        #{violateValue,jdbcType=DECIMAL},
      </if>
      <if test="computeType != null" >
        #{computeType,jdbcType=INTEGER},
      </if>
      <if test="violateAmount != null" >
        #{violateAmount,jdbcType=DECIMAL},
      </if>
      <if test="computeViolateTime != null" >
        #{computeViolateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createUserName != null" >
        #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.common.district.ad.model.ViolateRecord" >
    update pub_ad_violate_record
    <set >
      <if test="rbId != null" >
        rb_id = #{rbId,jdbcType=BIGINT},
      </if>
      <if test="violateType != null" >
        violate_type = #{violateType,jdbcType=INTEGER},
      </if>
      <if test="violateValue != null" >
        violate_value = #{violateValue,jdbcType=DECIMAL},
      </if>
      <if test="computeType != null" >
        compute_type = #{computeType,jdbcType=INTEGER},
      </if>
      <if test="violateAmount != null" >
        violate_amount = #{violateAmount,jdbcType=DECIMAL},
      </if>
      <if test="computeViolateTime != null" >
        compute_violate_time = #{computeViolateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createUserName != null" >
        create_user_name = #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null" >
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
    </set>
    where vr_id = #{vrId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.common.district.ad.model.ViolateRecord" >
    update pub_ad_violate_record
    set rb_id = #{rbId,jdbcType=BIGINT},
      violate_type = #{violateType,jdbcType=INTEGER},
      violate_value = #{violateValue,jdbcType=DECIMAL},
      compute_type = #{computeType,jdbcType=INTEGER},
      violate_amount = #{violateAmount,jdbcType=DECIMAL},
      compute_violate_time = #{computeViolateTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      is_del = #{isDel,jdbcType=INTEGER}
    where vr_id = #{vrId,jdbcType=BIGINT}
  </update>
</mapper>