<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.common.district.res.dao.CustomerMapper">
  <resultMap id="BaseResultMap" type="com.common.district.res.model.Customer">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="customer_type" jdbcType="INTEGER" property="customerType" />
    <result column="customer_scale" jdbcType="INTEGER" property="customerScale" />
    <result column="customer_source" jdbcType="TINYINT" property="customerSource" />
    <result column="turnover" jdbcType="DECIMAL" property="turnover" />
    <result column="industry" jdbcType="INTEGER" property="industry" />
    <result column="business_id" jdbcType="BIGINT" property="businessId" />
    <result column="customer_category" jdbcType="INTEGER" property="customerCategory" />
    <result column="customer_status" jdbcType="INTEGER" property="customerStatus" />
    <result column="is_three_number" jdbcType="INTEGER" property="isThreeNumber" />
    <result column="certificate_no" jdbcType="VARCHAR" property="certificateNo" />
    <result column="id_number" jdbcType="VARCHAR" property="idNumber" />
    <result column="business_code" jdbcType="VARCHAR" property="businessCode" />
    <result column="organization_code" jdbcType="VARCHAR" property="organizationCode" />
    <result column="tax_code" jdbcType="VARCHAR" property="taxCode" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="ratepayer_no" jdbcType="VARCHAR" property="ratepayerNo" />
    <result column="bank_name" jdbcType="VARCHAR" property="bankName" />
    <result column="bank_account" jdbcType="VARCHAR" property="bankAccount" />
    <result column="account_name" jdbcType="VARCHAR" property="accountName" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="create_user_id" jdbcType="VARCHAR" property="createUserId" />
    <result column="create_user_name" jdbcType="VARCHAR" property="createUserName" />
    <result column="update_user_id" jdbcType="VARCHAR" property="updateUserId" />
    <result column="update_user_name" jdbcType="VARCHAR" property="updateUserName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="depart_id" jdbcType="VARCHAR" property="departId" />
    <result column="depart_name" jdbcType="VARCHAR" property="departName" />
    <result column="create_company_id" jdbcType="VARCHAR" property="createCompanyId" />
    <result column="create_company_name" jdbcType="VARCHAR" property="createCompanyName" />
    <result column="organ_id" jdbcType="VARCHAR" property="organId" />
    <result column="del" jdbcType="INTEGER" property="del" />
  </resultMap>
  <sql id="Base_Column_List">
    id, customer_name, province, city, customer_type, customer_scale, customer_source, turnover, industry,
    business_id, customer_category, customer_status, is_three_number, certificate_no, 
    id_number, business_code, organization_code, tax_code, remarks, ratepayer_no, bank_name, 
    bank_account, account_name, phone, address, create_user_id, create_user_name, update_user_id, 
    update_user_name, create_time, update_time, depart_id, depart_name, create_company_id, 
    create_company_name, organ_id, del
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pub_res_customer
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from pub_res_customer
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.common.district.res.model.Customer">
    insert into pub_res_customer (id, customer_name, province, 
      city, customer_type, customer_scale, customer_source,
      turnover, industry, business_id, 
      customer_category, customer_status, is_three_number, 
      certificate_no, id_number, business_code, 
      organization_code, tax_code, remarks, 
      ratepayer_no, bank_name, bank_account, 
      account_name, phone, address, 
      create_user_id, create_user_name, update_user_id, 
      update_user_name, create_time, update_time, 
      depart_id, depart_name, create_company_id, 
      create_company_name, organ_id, del
      )
    values (#{id,jdbcType=BIGINT}, #{customerName,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, 
      #{city,jdbcType=VARCHAR}, #{customerType,jdbcType=INTEGER}, #{customerScale,jdbcType=INTEGER}, #{customerSource,jdbcType=TINYINT},
      #{turnover,jdbcType=DECIMAL}, #{industry,jdbcType=INTEGER}, #{businessId,jdbcType=BIGINT}, 
      #{customerCategory,jdbcType=INTEGER}, #{customerStatus,jdbcType=INTEGER}, #{isThreeNumber,jdbcType=INTEGER}, 
      #{certificateNo,jdbcType=VARCHAR}, #{idNumber,jdbcType=VARCHAR}, #{businessCode,jdbcType=VARCHAR}, 
      #{organizationCode,jdbcType=VARCHAR}, #{taxCode,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, 
      #{ratepayerNo,jdbcType=VARCHAR}, #{bankName,jdbcType=VARCHAR}, #{bankAccount,jdbcType=VARCHAR}, 
      #{accountName,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{createUserId,jdbcType=VARCHAR}, #{createUserName,jdbcType=VARCHAR}, #{updateUserId,jdbcType=VARCHAR}, 
      #{updateUserName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{departId,jdbcType=VARCHAR}, #{departName,jdbcType=VARCHAR}, #{createCompanyId,jdbcType=VARCHAR}, 
      #{createCompanyName,jdbcType=VARCHAR}, #{organId,jdbcType=VARCHAR}, #{del,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.common.district.res.model.Customer" keyProperty="id" useGeneratedKeys="true">
    insert into pub_res_customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="customerName != null">
        customer_name,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="customerType != null">
        customer_type,
      </if>
      <if test="customerScale != null">
        customer_scale,
      </if>
      <if test="customerSource != null">
        customer_source,
      </if>
      <if test="turnover != null">
        turnover,
      </if>
      <if test="industry != null">
        industry,
      </if>
      <if test="businessId != null">
        business_id,
      </if>
      <if test="customerCategory != null">
        customer_category,
      </if>
      <if test="customerStatus != null">
        customer_status,
      </if>
      <if test="isThreeNumber != null">
        is_three_number,
      </if>
      <if test="certificateNo != null">
        certificate_no,
      </if>
      <if test="idNumber != null">
        id_number,
      </if>
      <if test="businessCode != null">
        business_code,
      </if>
      <if test="organizationCode != null">
        organization_code,
      </if>
      <if test="taxCode != null">
        tax_code,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="ratepayerNo != null">
        ratepayer_no,
      </if>
      <if test="bankName != null">
        bank_name,
      </if>
      <if test="bankAccount != null">
        bank_account,
      </if>
      <if test="accountName != null">
        account_name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="createUserName != null">
        create_user_name,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="updateUserName != null">
        update_user_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="departId != null">
        depart_id,
      </if>
      <if test="departName != null">
        depart_name,
      </if>
      <if test="createCompanyId != null">
        create_company_id,
      </if>
      <if test="createCompanyName != null">
        create_company_name,
      </if>
      <if test="organId != null">
        organ_id,
      </if>
      <if test="del != null">
        del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="customerName != null">
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="customerType != null">
        #{customerType,jdbcType=INTEGER},
      </if>
      <if test="customerScale != null">
        #{customerScale,jdbcType=INTEGER},
      </if>
      <if test="customerSource != null">
        #{customerSource,jdbcType=TINYINT},
      </if>
      <if test="turnover != null">
        #{turnover,jdbcType=DECIMAL},
      </if>
      <if test="industry != null">
        #{industry,jdbcType=INTEGER},
      </if>
      <if test="businessId != null">
        #{businessId,jdbcType=BIGINT},
      </if>
      <if test="customerCategory != null">
        #{customerCategory,jdbcType=INTEGER},
      </if>
      <if test="customerStatus != null">
        #{customerStatus,jdbcType=INTEGER},
      </if>
      <if test="isThreeNumber != null">
        #{isThreeNumber,jdbcType=INTEGER},
      </if>
      <if test="certificateNo != null">
        #{certificateNo,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null">
        #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="businessCode != null">
        #{businessCode,jdbcType=VARCHAR},
      </if>
      <if test="organizationCode != null">
        #{organizationCode,jdbcType=VARCHAR},
      </if>
      <if test="taxCode != null">
        #{taxCode,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="ratepayerNo != null">
        #{ratepayerNo,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null">
        #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null">
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createUserName != null">
        #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateUserName != null">
        #{updateUserName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="departId != null">
        #{departId,jdbcType=VARCHAR},
      </if>
      <if test="departName != null">
        #{departName,jdbcType=VARCHAR},
      </if>
      <if test="createCompanyId != null">
        #{createCompanyId,jdbcType=VARCHAR},
      </if>
      <if test="createCompanyName != null">
        #{createCompanyName,jdbcType=VARCHAR},
      </if>
      <if test="organId != null">
        #{organId,jdbcType=VARCHAR},
      </if>
      <if test="del != null">
        #{del,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.common.district.res.model.Customer">
    update pub_res_customer
    <set>
      <if test="customerName != null">
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="customerType != null">
        customer_type = #{customerType,jdbcType=INTEGER},
      </if>
      <if test="customerScale != null">
        customer_scale = #{customerScale,jdbcType=INTEGER},
      </if>
      <if test="customerSource != null">
        customer_source = #{customerSource,jdbcType=TINYINT},
      </if>
      <if test="turnover != null">
        turnover = #{turnover,jdbcType=DECIMAL},
      </if>
      <if test="industry != null">
        industry = #{industry,jdbcType=INTEGER},
      </if>
      <if test="businessId != null">
        business_id = #{businessId,jdbcType=BIGINT},
      </if>
      <if test="customerCategory != null">
        customer_category = #{customerCategory,jdbcType=INTEGER},
      </if>
      <if test="customerStatus != null">
        customer_status = #{customerStatus,jdbcType=INTEGER},
      </if>
      <if test="isThreeNumber != null">
        is_three_number = #{isThreeNumber,jdbcType=INTEGER},
      </if>
      <if test="certificateNo != null">
        certificate_no = #{certificateNo,jdbcType=VARCHAR},
      </if>
      <if test="idNumber != null">
        id_number = #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="businessCode != null">
        business_code = #{businessCode,jdbcType=VARCHAR},
      </if>
      <if test="organizationCode != null">
        organization_code = #{organizationCode,jdbcType=VARCHAR},
      </if>
      <if test="taxCode != null">
        tax_code = #{taxCode,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="ratepayerNo != null">
        ratepayer_no = #{ratepayerNo,jdbcType=VARCHAR},
      </if>
      <if test="bankName != null">
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankAccount != null">
        bank_account = #{bankAccount,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null">
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createUserName != null">
        create_user_name = #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateUserName != null">
        update_user_name = #{updateUserName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="departId != null">
        depart_id = #{departId,jdbcType=VARCHAR},
      </if>
      <if test="departName != null">
        depart_name = #{departName,jdbcType=VARCHAR},
      </if>
      <if test="createCompanyId != null">
        create_company_id = #{createCompanyId,jdbcType=VARCHAR},
      </if>
      <if test="createCompanyName != null">
        create_company_name = #{createCompanyName,jdbcType=VARCHAR},
      </if>
      <if test="organId != null">
        organ_id = #{organId,jdbcType=VARCHAR},
      </if>
      <if test="del != null">
        del = #{del,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.common.district.res.model.Customer">
    update pub_res_customer
    set customer_name = #{customerName,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      customer_type = #{customerType,jdbcType=INTEGER},
      customer_scale = #{customerScale,jdbcType=INTEGER},
      customer_source = #{customerSource,jdbcType=TINYINT},
      turnover = #{turnover,jdbcType=DECIMAL},
      industry = #{industry,jdbcType=INTEGER},
      business_id = #{businessId,jdbcType=BIGINT},
      customer_category = #{customerCategory,jdbcType=INTEGER},
      customer_status = #{customerStatus,jdbcType=INTEGER},
      is_three_number = #{isThreeNumber,jdbcType=INTEGER},
      certificate_no = #{certificateNo,jdbcType=VARCHAR},
      id_number = #{idNumber,jdbcType=VARCHAR},
      business_code = #{businessCode,jdbcType=VARCHAR},
      organization_code = #{organizationCode,jdbcType=VARCHAR},
      tax_code = #{taxCode,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      ratepayer_no = #{ratepayerNo,jdbcType=VARCHAR},
      bank_name = #{bankName,jdbcType=VARCHAR},
      bank_account = #{bankAccount,jdbcType=VARCHAR},
      account_name = #{accountName,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      update_user_id = #{updateUserId,jdbcType=VARCHAR},
      update_user_name = #{updateUserName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      depart_id = #{departId,jdbcType=VARCHAR},
      depart_name = #{departName,jdbcType=VARCHAR},
      create_company_id = #{createCompanyId,jdbcType=VARCHAR},
      create_company_name = #{createCompanyName,jdbcType=VARCHAR},
      organ_id = #{organId,jdbcType=VARCHAR},
      del = #{del,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="getCustomerList" resultType="com.common.district.res.model.Customer">
      SELECT
          id,
          customer_name AS customerName,
          customer_type AS customerType,
          customer_category AS customerCategory
      FROM pub_res_customer
      WHERE
      <include refid="where_all" />
    limit #{pageNo},#{pageSize}
    </select>
  <select id="getCustomerListCount" resultType="java.lang.Integer">
      SELECT
        COUNT(1)
      FROM pub_res_customer
      WHERE
      <include refid="where_all" />
  </select>

  <sql id="where_all">
    organ_id = #{organId}
    AND del = 0
    <if test="customerVO.customerName != null and customerVO.customerName != ''">
      AND customer_name LIKE CONCAT(CONCAT('%', #{customerVO.customerName}), '%')
    </if>
    <if test="customerVO.customerCategory != null and customerVO.customerCategory != ''">
      AND customer_category = #{customerVO.customerCategory}
    </if>
    <if test="customerVO.industry != null and customerVO.industry != ''" >
      AND industry = #{customerVO.industry}
    </if>
    <if test="customerVO.customerType != null and customerVO.customerType != ''">
      AND customer_type = #{customerVO.customerType}
    </if>
    <if test="customerVO.createTimeStart != null and customerVO.createTimeEnd != null">
      AND create_time >= #{customerVO.createTimeStart}
      <![CDATA[ AND create_time <= #{customerVO.createTimeEnd} ]]>
    </if>
      order by create_time desc
  </sql>
  <select id="getCustomerListByOrganIdAndConLst" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from pub_res_customer
    where organ_id = #{organId}
    <if test="null !=comLst and comLst.size > 0">
      and create_company_id in
      <foreach collection="comLst" item="l" open="(" close=")" separator=",">
        #{l}
      </foreach>
    </if>
  </select>

  <select id="getCusIdAndName" resultType="java.util.HashMap">
    select
    cc.customer_name AS customerName,
    cc.id AS id
    from pub_res_customer cc
    where 1=1
    and cc.organ_id = #{organId}
    and cc.customer_name like concat('%', #{search.customerName},'%')
    and cc.del=0
    order by cc.id desc
  </select>
</mapper>